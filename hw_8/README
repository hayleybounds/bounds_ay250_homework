The ipynb file just contains the different files in cells. The information is the same between them and the files, but the notebook has slightly more commentary. The application is mostly contained in basic_site.py. The database file contains model and database, which use sqlalchemy. The config file has some configuration settings that specify database location, ect. The website has 3 pages, and one method per page, each with a get and post option. 
The homepage displays a welcome message that includes information on how many collections are present and the like. It also contains a simple form consisting of one button that, when pressed, clears and recreates the database. This happens its called as POST.
The file upload page displays a form with a field for a collection name, and an area to select a file. When called with post, it will error check its inputs, then attempt to upload the file and add it to the database. If there is an error, it tells the user what to do differently and redisplays the file upload form. If its successfully uploaded, it says so and then again redisplays the upload form.
Query database displays a form with an option to input a sqllite query. It then checks the query for validity, displaying error messages if its invalid. Using message flashing and helper methods, it displays the results from the database.

Helper methods handle parsing the bibtex file and adding it to the database. I use a dictionary to get each field and add it to the Citation class. 

I wrote basic test cases that check that the database is cleared and added to as expected, that queries produce the expected results, that error handling is done correctly, and that page text is displaying as expected. TESTS MUST BE RUN USING PYTEST FROM THE bounds_ay250_homework FOLDER AND NOT THW HW_8 FOLDER. This was necessary for travis to work.
